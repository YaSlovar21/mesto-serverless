{"version":3,"sources":["images/logo-mesto.svg","components/Header.js","images/profile-plus.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","utils/auth.js","components/Login.js","components/ProtectedRoute.js","images/success.svg","images/smtWrong.svg","components/App.js","reportWebVitals.js","index.js"],"names":["Header","type","userEmail","handleSignOutClick","pathname","useLocation","className","src","logo","alt","to","onClick","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","card","isOwn","owner","login","cardDeleteButtonClassName","isLiked","JSON","parse","likes","some","i","cardLikeButtonClassName","imageUrl","name","onCardClick","title","onCardLike","length","onCardDelete","Main","default_avatar_id","onEditAvatar","real_name","onEditProfile","about","onAddPlace","addCardSvg","cards","map","_id","Footer","PopupWithForm","isOpen","onClose","onSubmit","children","submitText","ImagePopup","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","buttonText","value","onChange","target","id","placeholder","minLength","maxLength","required","EditAvatarPopup","avatarLink","useRef","current","onUpdateAvatar","ref","AddPlacePopup","link","setLink","onAddCard","baseUrl","headers","this","_baseUrl","_headers","response","ok","json","Promise","reject","status","fetch","credentials","then","checkResponseIsOk","method","body","stringify","a","cardId","result","toState","avatar","BASE_URL","Login","respCode","setRespCode","params","URLSearchParams","window","location","search","get","console","log","handleLogin","ProtectedRoute","Component","component","loggedIn","withRouter","isProfilePopupOpen","setIsProfilePopupOpen","isAvatarPopupOpen","setIsAvatarPopupOpen","isCardPopupOpen","setIsCardPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","isImagePopupOpen","setIsImagePopupOpen","setCurrentUser","setLoggedIn","userCards","setUserCards","isFetching","setIsFetching","history","useHistory","closeAllPopups","setIsInfoTooltipOpen","all","api","getInfoUser","getInitialCards","userData","catch","err","setIsSuccessRegistration","setUserEmail","res","push","Provider","exact","path","changeLikeCardStatus","newCard","c","code","deleteCard","filter","addCard","finally","updateProfileImage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d280bbcd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-mesto.bbe2a6ea.svg\";","import React from 'react';\r\nimport logo from '../images/logo-mesto.svg';\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom';\r\n\r\nfunction Header({type, userEmail, handleSignOutClick}) {\r\n    //const {url} = useRouteMatch();\r\n    const {pathname} = useLocation();\r\n    //console.log(a);\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} className=\"header__logo\" alt=\"Место Россия\" />\r\n            <div>\r\n            { pathname === \"/\" \r\n                ? (\r\n                    <>\r\n                        <span className=\"header__link\">{userEmail}</span>\r\n                        <Link to=\"/\" className=\"header__link header__link_color_gray\" onClick={handleSignOutClick}>Выйти</Link>\r\n                    </>\r\n                ) \r\n                : ''\r\n            }\r\n         \r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/profile-plus.bed8c136.svg\";","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\n//вместо props можно исп. деструктуризацию (попробовать)\r\n//function Card({ card, onCardClick, ... })\r\nfunction Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const { card } = props;\r\n  \r\n  function handleClick() {\r\n    props.onCardClick(props.card); //<Card card={id:123, name:'rwer',....} onCardClick={функция обработчик, в которую мы передаем карточку} />\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  const isOwn = card.owner === currentUser.login;  /// _id заменено на login\r\n  const cardDeleteButtonClassName = `elements__delete-button link-beauty link-beauty_type_like ${\r\n    isOwn ? \"elements__delete-button_visible\" : \"elements__delete-button_hidden\"\r\n  }`;\r\n\r\n  \r\n  const isLiked = JSON.parse(card.likes).some((i) => i === currentUser.login);  /// _id заменено на login\r\n  const cardLikeButtonClassName = `elements__like link-beauty link-beauty_type_like ${\r\n    isLiked ? \"elements__like_liked\" : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <div className=\"elements__item\">\r\n      <img\r\n        className=\"elements__image\"\r\n        src={`${props.card.imageUrl}`}\r\n        alt={props.card.name}\r\n        onClick={handleClick}\r\n      />\r\n      <div className=\"elements__footer\">\r\n        <h2 className=\"elements__heading\">{props.card.title}</h2>\r\n        <div className=\"elements__like-container\">\r\n          <button\r\n            type=\"button\"\r\n            className={cardLikeButtonClassName}\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <p className=\"elements__likes\">{JSON.parse(props.card.likes).length}</p>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className={cardDeleteButtonClassName}\r\n        onClick={handleDeleteClick}\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import addCardSvg from \"../images/profile-plus.svg\";\r\n\r\nimport React, { useContext } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  //..\r\n  //Хук useEffect для получения данных о пользователе используем в App.js, там же записываем их в стейт и его передаем в провайдер созданного контекста\r\n  //const [userName, setUserName] = React.useState('');   const [userDescription, setUserDescription ] = React.useState('');   const [userAvatar, setUserAvatar] = React.useState('');\r\n\r\n  //Эффект по получению карточек тоже подняли в App\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <img\r\n          className=\"profile__avatar\"\r\n          src={`https://avatars.yandex.net/get-yapic/${currentUser.default_avatar_id}/islands-200`}\r\n          alt=\"Аватар пользователя\"\r\n        />\r\n        <div\r\n          className=\"profile__avatar-change-button\"\r\n          onClick={props.onEditAvatar}\r\n        ></div>\r\n\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">\r\n            {\"Имя пользователя\" && currentUser.real_name}\r\n          </h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"profile__edit-button link-beauty\"\r\n            onClick={props.onEditProfile}\r\n          ></button>\r\n          <p className=\"profile__about\">\r\n            {\"Описание профиля\" && currentUser.about}\r\n          </p>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.onAddPlace}\r\n          className=\"profile__add-button link-beauty\"\r\n        >\r\n          <img src={addCardSvg} alt=\"Добавить\" />\r\n        </button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {props.cards.map((card) => (\r\n          <Card\r\n            key={card._id}\r\n            card={card}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span>&copy; 2021 Mesto Russia</span>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup-${props.name} ${\r\n        props.isOpen ? \"popup_opened\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"popup__container\">\r\n        <button\r\n          className=\"popup__button-close link-beauty\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n\r\n        <form\r\n          className=\"popup__form\"\r\n          /*name=\"Card\"*/ onSubmit={props.onSubmit}\r\n          name={props.name}\r\n        >\r\n          <h2 className=\"popup__title\">{props.title}</h2>\r\n\r\n          {props.children}\r\n\r\n          <button\r\n            className=\"popup__button-save popup__button-save_type_card\"\r\n            type=\"submit\"\r\n          >\r\n            {props.submitText}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <div className={`popup popup_darked popup-viewport ${props.isOpen ? \"popup_opened\" : \"\"}`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__button-close link-beauty\" type=\"button\" onClick={props.onClose}></button>    \r\n                <div className=\"popup__image-view\">\r\n                    <img className=\"popup__image\" alt=\"картинка под загрузку\" src={`${props.card.imageUrl}`} />\r\n                    <p className=\"popup__image-description\">{props.card.title}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from \"react\";\r\n\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nimport { useContext } from \"react\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  //стейты для управляемых элементов!\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  //подписываемся на контекст, после загрузки текущего пользователя из API, его данные будут использоваться в управляемых компонентах\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  //загружаем в локальные стейты данные из контекста (глобального стейта)\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n  //привязывем эффект к глобальному контексту\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    //после отправки на сервер, мы получаем в ответ ОК и должны обновить currentUser из App, поэтому поднимаем данные\r\n    props.onUpdateUser(name, description);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"profile\"\r\n      title=\"Вы действительно хотите удалить карточку?\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      submitText={props.buttonText}\r\n    >\r\n      <input\r\n        value={name || ''}\r\n        onChange={handleNameChange}\r\n        className=\"popup__input popup__input_type_name\"\r\n        id=\"name-input\"\r\n        name=\"name\"\r\n        placeholder=\"Имя пользователя\"\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error name-input-error\"></span>\r\n      <input\r\n        value={description || ''}\r\n        onChange={handleDescriptionChange}\r\n        className=\"popup__input popup__input_type_about\"\r\n        id=\"about-input\"\r\n        name=\"about\"\r\n        placeholder=\"Описание профиля\"\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error about-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","//Компонент находится в App.js\r\n\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  //Контекстом вставить текущую ссылку?????????\r\n  //const currentUser = useContext(CurrentUserContext);\r\n\r\n  //в EditProfilePopup использовались управляемые компоненты, здесь используем реф\r\n  const avatarLink = React.useRef();\r\n\r\n  useEffect(() => {\r\n    if (props.isOpen) {\r\n      avatarLink.current.value = \"\";\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateAvatar(avatarLink.current.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"avatar\"\r\n      title=\"Обновить аватар\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      submitText={props.buttonText}\r\n    >\r\n      <input\r\n        ref={avatarLink}\r\n        className=\"popup__input popup__input_type_avatar\"\r\n        id=\"avatar-link-input\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        name=\"link\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error avatar-link-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  //стейты полей!!!\r\n  const [name, setName] = React.useState(\"\");\r\n  const [link, setLink] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.isOpen) {\r\n      setName('');\r\n      setLink('');\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onAddCard(name, link);\r\n  }\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n  function handleLinkChange(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"card\"\r\n      title=\"Новое место\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      submitText={props.buttonText}\r\n    >\r\n      <input\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        className=\"popup__input popup__input_type_place\"\r\n        id=\"place-name-input\"\r\n        type=\"text\"\r\n        placeholder=\"Название\"\r\n        name=\"name\"\r\n        minLength=\"1\"\r\n        maxLength=\"30\"\r\n        required\r\n      />\r\n      <span className=\"popup__input-error place-name-input-error\"></span>\r\n      <input\r\n        value={link}\r\n        onChange={handleLinkChange}\r\n        className=\"popup__input popup__input_type_link\"\r\n        id=\"place-link-input\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        name=\"link\"\r\n      />\r\n      <span className=\"popup__input-error place-link-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","class Api {\r\n    constructor({baseUrl, headers}) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n    checkResponseIsOk(response) {\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${response.status}`);\r\n        }\r\n    }\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n        })\r\n        .then((response) => {\r\n            return this.checkResponseIsOk(response);\r\n        })\r\n    }\r\n\r\n    addCard(name, link) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                title: name,\r\n            }),\r\n        })\r\n        .then((response) => {\r\n            return this.checkResponseIsOk(response);\r\n        })\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._baseUrl}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                a: '12',    //ФИКТИВНОЕ ТЕЛО, ловится строчкой const req = context.getPayload();\r\n            }),\r\n          })\r\n          .then((response) => {\r\n            return this.checkResponseIsOk(response);\r\n          });\r\n    }\r\n\r\n    addLike(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n            method: \"PUT\",\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                a: '12',    //ФИКТИВНОЕ ТЕЛО, ловится строчкой const req = context.getPayload();\r\n            }),\r\n          }).then((response) => {\r\n            return this.checkResponseIsOk(response);\r\n          });\r\n    }\r\n\r\n    removeLike(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                a: '12',    //ФИКТИВНОЕ ТЕЛО, ловится строчкой const req = context.getPayload();\r\n            }),\r\n          }).then((result) => {\r\n            return this.checkResponseIsOk(result);\r\n          });\r\n    }\r\n\r\n    changeLikeCardStatus(cardId, toState) {\r\n        if (toState) {\r\n            return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n                method: \"PUT\",\r\n                headers: this._headers,\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    a: '12',    //ФИКТИВНОЕ ТЕЛО, ловится строчкой const req = context.getPayload();\r\n                }),\r\n              }).then((response) => {\r\n                return this.checkResponseIsOk(response);\r\n              });\r\n        } else {\r\n            return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n                method: \"DELETE\",\r\n                headers: this._headers,\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    a: '12',    //ФИКТИВНОЕ ТЕЛО, ловится строчкой const req = context.getPayload();\r\n                }),\r\n              }).then((result) => {\r\n                return this.checkResponseIsOk(result);\r\n              });\r\n        }\r\n    }\r\n\r\n    //аватар приходит данным методом\r\n    getInfoUser(){\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n        })\r\n        .then((response) => {\r\n            return this.checkResponseIsOk(response);\r\n        });\r\n    }\r\n\r\n    setInfoUser(name, about) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about,\r\n            }),\r\n            credentials: 'include',\r\n        })\r\n        .then((response)=> {\r\n            return this.checkResponseIsOk(response);\r\n        });\r\n    }\r\n\r\n    //обновляем аватар данным методом\r\n    updateProfileImage(link) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                avatar: link,\r\n            }),\r\n        })\r\n        .then((response)=> {\r\n            return this.checkResponseIsOk(response);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default new Api({\r\n    //baseUrl: 'https://d5d11c4rja6fao88re26.apigw.yandexcloud.net',\r\n    baseUrl: 'https://api.app-mesto.kupcov.com',\r\n    headers: {\r\n      // authorization: '7ca5b34f-d430-4580-a7ad-8a26fa855204',\r\n      'Content-Type': 'application/json',\r\n      'Authorization' : 'Bearer 2023haha'\r\n    }\r\n});\r\n\r\n","//export const BASE_URL = 'https://auth.nomoreparties.co';\r\n//export const BASE_URL = 'https://d5d11c4rja6fao88re26.apigw.yandexcloud.net';\r\n\r\nexport const BASE_URL = 'https://api.app-mesto.kupcov.com';\r\n\r\nexport const login = (code) => {\r\n  console.log(JSON.stringify({code}));\r\n  return fetch(`${BASE_URL}/code-to-jwt`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'include',\r\n    body: JSON.stringify({code})\r\n  })\r\n  .then((response) => {\r\n    console.log(response);\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${response.status}`);\r\n    }\r\n  })\r\n};\r\n\r\nexport const logout = () => {\r\n  return fetch(`${BASE_URL}/logout`, {\r\n    headers: {\r\n      'Authorization' : 'Bearer 2023haha',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    method: 'POST',\r\n    credentials: 'include',\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      console.log(response);\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${response.status}`);\r\n    }\r\n  })\r\n};\r\n\r\n\r\nexport const checkToken = () => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization' : 'Bearer 2023haha'\r\n    },\r\n    credentials: 'include',\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      console.log(response);\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${response.status}`);\r\n    }\r\n  })\r\n}","\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function Login(props) {\r\n  //props.handleRegister - обработчик с APP\r\n  //управляемые поля\r\n  \r\n  const [respCode, setRespCode] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search) // id=123\r\n    setRespCode(params.get('code'));\r\n  }, [])\r\n\r\n  console.log('Код от яндекса', respCode)\r\n  \r\n\r\n\r\n\r\n  function handleCodeChange(evt) {\r\n    setRespCode(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.handleLogin(respCode);\r\n  }\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <h2 className=\"form__heading\">Вход</h2>\r\n      <input\r\n        className=\"form__input\"\r\n        onChange={handleCodeChange}\r\n        type=\"text\"\r\n        value={respCode}\r\n        placeholder=\"Код подтверждения для входа\"\r\n        required\r\n      />\r\n      <button \r\n        type=\"submit\" \r\n        className=\"form__submit\"\r\n      >\r\n        Войти по коду подтверждения  \r\n      </button>\r\n      \r\n    </form>\r\n  );\r\n}","//HOC ProtectedRoute — этим компонентом защитите роут /, \r\n//чтобы на него не смогли перейти неавторизованные пользователи\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, ...props}) => {\r\n    return (\r\n        <Route>\r\n            {props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />}\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;","export default __webpack_public_path__ + \"static/media/success.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/smtWrong.d4ce2a26.svg\";","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\n\r\nimport { Route, Switch, useHistory, withRouter } from \"react-router-dom\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport api from \"../utils/api\";\r\nimport { login, register, checkToken, logout } from \"../utils/auth\";\r\n\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\n\r\nfunction App() {\r\n  const [isProfilePopupOpen, setIsProfilePopupOpen] = React.useState(false);\r\n  const [isAvatarPopupOpen, setIsAvatarPopupOpen] = React.useState(false);\r\n  const [isCardPopupOpen, setIsCardPopupOpen] = React.useState(false);\r\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({}); //стейт с информацией о текущем пользователе\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n\r\n  const [userCards, setUserCards] = React.useState([]);\r\n\r\n  const [isFetching, setIsFetching] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([\r\n      api.getInfoUser(), \r\n      api.getInitialCards()\r\n    ])\r\n    .then(([userData, cards]) => {\r\n      //До использования контекста: setUserName(response.name); setUserDescription(response.about); setUserAvatar(response.avatar)\r\n      setCurrentUser(userData);\r\n      setUserCards(cards);\r\n      console.log(cards);\r\n      console.log(userData);\r\n    })\r\n    .catch((err) => console.log(err));\r\n  }, [loggedIn]); //[] - отсутствие зависимостей (эффект вызывается только при монтировании)\r\n\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = JSON.parse(card.likes).some((i) => i === currentUser.login);\r\n    api\r\n      .changeLikeCardStatus(card.id, !isLiked)\r\n      .then((newCard) => {\r\n        console.log(newCard)\r\n        setUserCards((userCards) => {\r\n          return userCards.map((c) => (c.id === card.id ? newCard : c));\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    /*api\r\n      .deleteCard(card.id)\r\n      .then(() => {\r\n        setUserCards((userCards) => {\r\n          return userCards.filter((c) => c.id !== card.id);\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));*/\r\n      \r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setIsCardPopupOpen(true);\r\n  }\r\n\r\n  //пробрасывается в компонент Main: onCardClick={handleCardClick}\r\n  //В Main пробрасывается в Card:\r\n  //<Card key={card._id} card={card} onCardClick={props.onCardClick} />\r\n  //На карточке висит onClick={handleClick}, handleClick() - запускает onCardClick c данными карточки\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    setIsImagePopupOpen(true);\r\n  }\r\n\r\n  //на самом деле обработчик удаления карточки\r\n  function handleUpdateUser(card) {\r\n    //обрабочик <EditProfilePopup.. onUpdateUser=... />   (Новые данные поднимаются из дочернего popupwithForm, где происходит сабмит)\r\n //   setIsFetching(true);\r\n //   api.setInfoUser(name, desc).then((userData) => {\r\n  //      setCurrentUser(userData);\r\n  //      closeAllPopups();\r\n //     }).catch((err) => console.log(err))\r\n //     .finally(()=> {\r\n  //      setIsFetching(false);\r\n //     });\r\n // }\r\n   api\r\n    .deleteCard(card.id)\r\n    .then(() => {\r\n      setUserCards((userCards) => {\r\n        return userCards.filter((c) => c.id !== card.id);\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleUpdateAvatar(link) {\r\n    //обработчик компонента  <EditAvatarPopup ...  onUpdateAvatar= .... />\r\n    setIsFetching(true);\r\n    api\r\n      .updateProfileImage(link)\r\n      .then((userData) => {\r\n        setCurrentUser(userData);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(()=> {\r\n        setIsFetching(false);\r\n      })\r\n  }\r\n\r\n  function handleAddPlace(name, link) {\r\n    //обработчик компонента <AddPlacePopup ... onAddCard= ... />\r\n    setIsFetching(true);\r\n    api\r\n      .addCard(name, link)\r\n      .then((newCard) => {\r\n        console.log(newCard);\r\n        setUserCards([newCard, ...userCards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(()=> {\r\n        setIsFetching(false);\r\n      });\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsAvatarPopupOpen(false);\r\n    setIsProfilePopupOpen(false);\r\n    setIsCardPopupOpen(false);\r\n    setIsConfirmPopupOpen(false);\r\n    setIsInfoTooltipOpen(false);\r\n\r\n    setSelectedCard({});\r\n    setIsImagePopupOpen(false);\r\n  }\r\n\r\n  //handleLogin\r\n  //handleRegister\r\n  //спускаем через пропсы в компоненты Login и Register\r\n\r\n  const [isSuccessRegistration, setIsSuccessRegistration] = React.useState(false);\r\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\r\n  const [userEmail, setUserEmail] = React.useState(\"\");\r\n \r\n  React.useEffect(() => {\r\n      checkToken()\r\n        .then((res) => {\r\n          console.log(res);\r\n          setLoggedIn(true);\r\n          setUserEmail(res.login);\r\n          history.push(\"/\");\r\n        })\r\n        .catch((err) => \r\n          console.log(err)\r\n        );\r\n  }, []); \r\n\r\n  function handleLogin(code) {\r\n    login(code)\r\n      .then((res) => {\r\n        setLoggedIn(true);\r\n        \r\n        history.push(\"/\");\r\n        setUserEmail(res.login);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setIsSuccessRegistration(false);\r\n        setIsInfoTooltipOpen(true);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleSignOut() {\r\n    logout()\r\n      .then(() => {\r\n        history.push(\"/sign-in\");\r\n        setLoggedIn(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <Header\r\n        userEmail={userEmail}\r\n        handleSignOutClick={handleSignOut}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <ProtectedRoute\r\n            path=\"/\"\r\n            component={Main}\r\n            loggedIn={loggedIn}\r\n            cards={userCards}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick}\r\n          />\r\n          <Footer />\r\n        </Route>\r\n\r\n        <Route path=\"/sign-in\">\r\n          <Login handleLogin={handleLogin} />\r\n        </Route>\r\n      </Switch>\r\n\r\n      <EditProfilePopup\r\n        isOpen={isProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateUser /*на самом деле удаление карточки*/}\r\n        buttonText={isFetching ? \"Удаление...\" : \"Да\"}\r\n      />\r\n\r\n      <AddPlacePopup\r\n        isOpen={isCardPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onAddCard={handleAddPlace}\r\n        buttonText={isFetching ? \"Добавление...\" : \"Добавить\"}\r\n      />\r\n      \r\n      <EditAvatarPopup\r\n        isOpen={isAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateAvatar={handleUpdateAvatar}\r\n        buttonText={isFetching ? \"Сохранение...\" : \"Lf\"}\r\n      />\r\n\r\n      <ImagePopup\r\n        card={selectedCard}\r\n        isOpen={isImagePopupOpen}\r\n        onClose={closeAllPopups}\r\n      />\r\n\r\n      <PopupWithForm\r\n        name=\"confirmation\"\r\n        title=\"Вы уверены?\"\r\n        isOpen={isConfirmPopupOpen}\r\n        onClose={closeAllPopups}\r\n      />\r\n\r\n\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'; \r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}